{"version":3,"sources":["components/Navbar.js","components/DateInput.js","components/Loader.js","components/Footer.js","components/NasaPhoto.js","App.js","reportWebVitals.js","index.js"],"names":["NavBar","className","style","marginLeft","DateInput","props","useState","selectDate","setSelectedDate","onSubmit","changeDate","calendarClassName","value","onChange","formatInputText","year","month","day","minimumDate","maximumDate","utils","getToday","inputPlaceholder","shouldHighlightWeekends","type","Loader","loading","alt","imageSrc","imageStyle","width","marginTop","borderRadius","overlayBackground","Footer","href","target","rel","apiKey","process","NasaPhoto","photoData","setPhotoData","setDate","localStorage","getItem","like","setLike","useEffect","a","fetch","res","json","data","console","log","fetchPhoto","setItem","date","e","preventDefault","dateFromInput","getPhoto","media_type","src","url","title","frameBorder","gesture","allow","allowFullScreen","explanation","onClick","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d0845735.chunk.js","sourcesContent":["import React from \"react\";\nimport { GiRocketFlight } from \"react-icons/gi\";\n\nexport default function NavBar() {\n  return (\n    <div className=\"navbar\">\n      <div>\n        <h1 className=\"home-header\">\n          Spacegram\n          {\"\"}\n          <GiRocketFlight style={{ marginLeft: \"5px\" }} />\n        </h1>\n      </div>\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport \"react-modern-calendar-datepicker/lib/DatePicker.css\";\nimport Calendar, { utils } from \"react-modern-calendar-datepicker\";\n\nconst DateInput = (props) => {\n  const [selectDate, setSelectedDate] = useState(\"\");\n\n  const formatInputValue = () => {\n    if (!selectDate) return \"\";\n    return `${selectDate.year}-${selectDate.month}-${selectDate.day}`;\n  };\n\n  const minimumDate = {\n    year: 1995,\n    month: 6,\n    day: 16,\n  };\n\n  return (\n    <div>\n      <form onSubmit={props.changeDate}>\n        <div className=\"dateInput\">\n          <Calendar\n            calendarClassName=\"responsive-calendar\"\n            value={selectDate}\n            onChange={setSelectedDate}\n            formatInputText={formatInputValue}\n            minimumDate={minimumDate}\n            maximumDate={utils().getToday()}\n            inputPlaceholder=\"Select a day\"\n            shouldHighlightWeekends\n          />\n          <button className=\"submit-button\" type=\"submit\">\n            Done\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default DateInput;\n","import React from \"react\";\nimport GifLoader from \"react-gif-loader\";\n\nfunction Loader() {\n  return (\n    <div className=\"loader\">\n      <p className=\"loader-para\">\n        Doggo's also waiting for NASA to respond... <br />\n        Please be patient!\n      </p>\n\n      <GifLoader\n        loading={true}\n        alt=\"Dog in space-shuttle\"\n        imageSrc=\"https://media3.giphy.com/media/9tx0gy37p7oXu/200w.webp?cid=ecf05e477oexhjw5ymg8ojsi1vcjazqd0wmz90bgftq57uwm&rid=200w.webp&ct=g\"\n        imageStyle={{\n          width: \"60vw\",\n          marginTop: \"25vh\",\n          borderRadius: \"50px\",\n        }}\n        overlayBackground=\"rgba(0,0,0,0.5)\"\n      />\n    </div>\n  );\n}\n\nexport default Loader;\n","import React from \"react\";\nimport {\n  AiOutlineGithub,\n  AiFillLinkedin,\n  AiOutlineGlobal,\n} from \"react-icons/ai\";\n\nfunction Footer() {\n  return (\n    <div className=\"footer\">\n      <p>@Kashyap Prajapati</p>\n\n      <div>\n        <a\n          href=\"https://github.com/krish4uu\"\n          target=\"_blank\"\n          rel=\"noreferrer\"\n          className=\"footer-social\"\n        >\n          {\" \"}\n          <AiOutlineGithub />\n        </a>\n      </div>\n      <div>\n        <a\n          href=\"https://www.linkedin.com/in/prajapatikashyap\"\n          target=\"_blank\"\n          rel=\"noreferrer\"\n          className=\"footer-social\"\n        >\n          {\" \"}\n          <AiFillLinkedin />\n        </a>\n      </div>\n      <div>\n        <a\n          href=\"https://www.kashyapprajapati.com\"\n          target=\"_blank\"\n          rel=\"noreferrer\"\n          className=\"footer-social\"\n        >\n          {\" \"}\n          <AiOutlineGlobal />\n        </a>\n      </div>\n    </div>\n  );\n}\n\nexport default Footer;\n","import React, { useState, useEffect } from \"react\";\nimport NavBar from \"./Navbar\";\nimport DateInput from \"./DateInput\";\nimport { AiOutlineHeart } from \"react-icons/ai\";\nimport Loader from \"./Loader\";\n\nimport Footer from \"./Footer\";\n\nconst apiKey = process.env.REACT_APP_NASA_KEY;\n\nexport default function NasaPhoto() {\n  const [photoData, setPhotoData] = useState();\n  const [date, setDate] = useState(\"\");\n  const [like, setLike] = useState(\n    localStorage.getItem(\"liked-button\") === \"true\"\n  );\n\n  useEffect(() => {\n    fetchPhoto();\n\n    async function fetchPhoto() {\n      const res = await fetch(\n        `https://api.nasa.gov/planetary/apod?api_key=${apiKey}`\n      );\n      const data = await res.json();\n      setPhotoData(data);\n      console.log(data);\n    }\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem(\"liked-button\", like);\n  }, [like]);\n\n  if (!photoData) return <Loader />;\n\n  async function getPhoto(date) {\n    const res = await fetch(\n      `https://api.nasa.gov/planetary/apod?date=${date}&api_key=${apiKey}`\n    );\n    const data = await res.json();\n    setPhotoData(data);\n    console.log(data);\n    setLike(\"\");\n  }\n\n  const changeDate = (e) => {\n    e.preventDefault();\n    let dateFromInput = e.target[0].value;\n    setDate(dateFromInput);\n    getPhoto(dateFromInput);\n  };\n\n  function handleClick() {\n    setLike(!like);\n  }\n\n  return (\n    <>\n      <NavBar />\n      <DateInput changeDate={changeDate} />\n      <div className=\"nasa-photo\">\n        {photoData.media_type === \"image\" ? (\n          <img src={photoData.url} alt={photoData.title} className=\"photo\" />\n        ) : (\n          <iframe\n            title=\"space-video\"\n            src={photoData.url}\n            frameBorder=\"0\"\n            gesture=\"media\"\n            allow=\"encrypted-media\"\n            allowFullScreen\n            className=\"photo\"\n          />\n        )}\n        <div>\n          <h1>{photoData.title}</h1>\n          <p className=\"date\">{photoData.date}</p>\n          <p className=\"explanation\">{photoData.explanation}</p>\n          <div className=\"like-div\">\n            <button\n              className={like ? \"like-button-true\" : \"like-button-false\"}\n              type=\"button\"\n              onClick={handleClick}\n            >\n              {\" \"}\n              <AiOutlineHeart />\n              &nbsp;\n              <span>me</span>\n            </button>\n          </div>\n        </div>\n      </div>\n      <div>\n        <Footer />\n      </div>\n    </>\n  );\n}\n","import React from \"react\";\n\nimport NasaPhoto from \"./components/NasaPhoto\";\n\nimport \"./App.css\";\n\nexport default function App() {\n  return (\n    <div className=\"app\">\n      <NasaPhoto />\n    </div>\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport \"./index.css\";\nimport App from \"./App\";\n\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}