{"version":3,"sources":["components/DateInput.js","components/Loader.js","components/NasaPhoto.js"],"names":["DateInput","props","useState","selectDate","setSelectedDate","onSubmit","changeDate","className","calendarClassName","value","onChange","formatInputText","year","month","day","minimumDate","maximumDate","utils","getToday","inputPlaceholder","shouldHighlightWeekends","type","Loader","loading","alt","imageSrc","imageStyle","width","marginTop","borderRadius","overlayBackground","apiKey","process","NasaPhoto","photoData","setPhotoData","setDate","localStorage","getItem","like","setLike","useEffect","a","fetch","res","json","data","console","log","fetchPhoto","setItem","date","e","preventDefault","dateFromInput","target","getPhoto","media_type","src","url","title","frameBorder","gesture","allow","allowFullScreen","explanation","onClick"],"mappings":"4OAyCeA,EArCG,SAACC,GACjB,MAAsCC,mBAAS,IAA/C,mBAAOC,EAAP,KAAmBC,EAAnB,KAaA,OACE,8BACE,sBAAMC,SAAUJ,EAAMK,WAAtB,SACE,sBAAKC,UAAU,YAAf,UACE,cAAC,IAAD,CACEC,kBAAkB,sBAClBC,MAAON,EACPO,SAAUN,EACVO,gBAnBe,WACvB,OAAKR,EACC,GAAN,OAAUA,EAAWS,KAArB,YAA6BT,EAAWU,MAAxC,YAAiDV,EAAWW,KADpC,IAmBhBC,YAfU,CAClBH,KAAM,KACNC,MAAO,EACPC,IAAK,IAaGE,YAAaC,kBAAQC,WACrBC,iBAAiB,eACjBC,yBAAuB,IAEzB,wBAAQb,UAAU,gBAAgBc,KAAK,SAAvC,0B,wBCNKC,MAvBf,WACE,OACE,sBAAKf,UAAU,SAAf,UACE,oBAAGA,UAAU,cAAb,yDAC8C,uBAD9C,wBAKA,cAAC,IAAD,CACEgB,SAAS,EACTC,IAAI,uBACJC,SAAS,iIACTC,WAAY,CACVC,MAAO,OACPC,UAAW,OACXC,aAAc,QAEhBC,kBAAkB,wBCdpBC,EAASC,2CAEA,SAASC,IACtB,MAAkC/B,qBAAlC,mBAAOgC,EAAP,KAAkBC,EAAlB,KACA,EAAwBjC,mBAAS,IAAjC,mBAAakC,GAAb,WACA,EAAwBlC,mBACmB,SAAzCmC,aAAaC,QAAQ,iBADvB,mBAAOC,EAAP,KAAaC,EAAb,KAqBA,GAjBAC,qBAAU,WAAM,4CAGd,8BAAAC,EAAA,sEACoBC,MAAM,+CAAD,OAC0BZ,IAFnD,cACQa,EADR,gBAIqBA,EAAIC,OAJzB,OAIQC,EAJR,OAKEX,EAAaW,GACbC,QAAQC,IAAIF,GANd,4CAHc,0DACdG,KAUC,IAEHR,qBAAU,WACRJ,aAAaa,QAAQ,eAAgBX,KACpC,CAACA,KAECL,EAAW,OAAO,cAAC,EAAD,IAxBW,4CA0BlC,WAAwBiB,GAAxB,iBAAAT,EAAA,sEACoBC,MAAM,4CAAD,OACuBQ,EADvB,oBACuCpB,IAFhE,cACQa,EADR,gBAIqBA,EAAIC,OAJzB,OAIQC,EAJR,OAKEX,EAAaW,GACbC,QAAQC,IAAIF,GACZN,EAAQ,IAPV,2CA1BkC,wBA+ClC,OACE,qCACE,cAAC,EAAD,CAAWlC,WAbI,SAAC8C,GAClBA,EAAEC,iBACF,IAAIC,EAAgBF,EAAEG,OAAO,GAAG9C,MAChC2B,EAAQkB,GAvCwB,oCAwChCE,CAASF,MAUP,sBAAK/C,UAAU,aAAf,UAC4B,UAAzB2B,EAAUuB,WACT,qBAAKC,IAAKxB,EAAUyB,IAAKnC,IAAKU,EAAU0B,MAAOrD,UAAU,UAEzD,wBACEqD,MAAM,cACNF,IAAKxB,EAAUyB,IACfE,YAAY,IACZC,QAAQ,QACRC,MAAM,kBACNC,iBAAe,EACfzD,UAAU,UAGd,gCACE,6BAAK2B,EAAU0B,QACf,mBAAGrD,UAAU,OAAb,SAAqB2B,EAAUiB,OAC/B,mBAAG5C,UAAU,cAAb,SAA4B2B,EAAU+B,cACtC,qBAAK1D,UAAU,WAAf,SACE,yBACEA,UAAWgC,EAAO,mBAAqB,oBACvClB,KAAK,SACL6C,QA7BZ,WACE1B,GAASD,IAyBD,UAKG,IACD,cAAC,IAAD,IANF,OAQE","file":"static/js/4.fe462ea2.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport \"react-modern-calendar-datepicker/lib/DatePicker.css\";\nimport Calendar, { utils } from \"react-modern-calendar-datepicker\";\n\nconst DateInput = (props) => {\n  const [selectDate, setSelectedDate] = useState(\"\");\n\n  const formatInputValue = () => {\n    if (!selectDate) return \"\";\n    return `${selectDate.year}-${selectDate.month}-${selectDate.day}`;\n  };\n\n  const minimumDate = {\n    year: 1995,\n    month: 6,\n    day: 16,\n  };\n\n  return (\n    <div>\n      <form onSubmit={props.changeDate}>\n        <div className=\"dateInput\">\n          <Calendar\n            calendarClassName=\"responsive-calendar\"\n            value={selectDate}\n            onChange={setSelectedDate}\n            formatInputText={formatInputValue}\n            minimumDate={minimumDate}\n            maximumDate={utils().getToday()}\n            inputPlaceholder=\"Select a day\"\n            shouldHighlightWeekends\n          />\n          <button className=\"submit-button\" type=\"submit\">\n            Done\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default DateInput;\n","import React from \"react\";\nimport GifLoader from \"react-gif-loader\";\n\nfunction Loader() {\n  return (\n    <div className=\"loader\">\n      <p className=\"loader-para\">\n        Doggo's also waiting for NASA to respond... <br />\n        Please be patient!\n      </p>\n\n      <GifLoader\n        loading={true}\n        alt=\"Dog in space-shuttle\"\n        imageSrc=\"https://media3.giphy.com/media/9tx0gy37p7oXu/200w.webp?cid=ecf05e477oexhjw5ymg8ojsi1vcjazqd0wmz90bgftq57uwm&rid=200w.webp&ct=g\"\n        imageStyle={{\n          width: \"60vw\",\n          marginTop: \"25vh\",\n          borderRadius: \"50px\",\n        }}\n        overlayBackground=\"rgba(0,0,0,0.5)\"\n      />\n    </div>\n  );\n}\n\nexport default Loader;\n","import React, { useState, useEffect } from \"react\";\n\nimport DateInput from \"./DateInput\";\nimport { AiOutlineHeart } from \"react-icons/ai\";\nimport Loader from \"./Loader\";\n\nconst apiKey = process.env.REACT_APP_NASA_KEY;\n\nexport default function NasaPhoto() {\n  const [photoData, setPhotoData] = useState();\n  const [date, setDate] = useState(\"\");\n  const [like, setLike] = useState(\n    localStorage.getItem(\"liked-button\") === \"true\"\n  );\n\n  useEffect(() => {\n    fetchPhoto();\n\n    async function fetchPhoto() {\n      const res = await fetch(\n        `https://api.nasa.gov/planetary/apod?api_key=${apiKey}`\n      );\n      const data = await res.json();\n      setPhotoData(data);\n      console.log(data);\n    }\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem(\"liked-button\", like);\n  }, [like]);\n\n  if (!photoData) return <Loader />;\n\n  async function getPhoto(date) {\n    const res = await fetch(\n      `https://api.nasa.gov/planetary/apod?date=${date}&api_key=${apiKey}`\n    );\n    const data = await res.json();\n    setPhotoData(data);\n    console.log(data);\n    setLike(\"\");\n  }\n\n  const changeDate = (e) => {\n    e.preventDefault();\n    let dateFromInput = e.target[0].value;\n    setDate(dateFromInput);\n    getPhoto(dateFromInput);\n  };\n\n  function handleClick() {\n    setLike(!like);\n  }\n\n  return (\n    <>\n      <DateInput changeDate={changeDate} />\n      <div className=\"nasa-photo\">\n        {photoData.media_type === \"image\" ? (\n          <img src={photoData.url} alt={photoData.title} className=\"photo\" />\n        ) : (\n          <iframe\n            title=\"space-video\"\n            src={photoData.url}\n            frameBorder=\"0\"\n            gesture=\"media\"\n            allow=\"encrypted-media\"\n            allowFullScreen\n            className=\"photo\"\n          />\n        )}\n        <div>\n          <h1>{photoData.title}</h1>\n          <p className=\"date\">{photoData.date}</p>\n          <p className=\"explanation\">{photoData.explanation}</p>\n          <div className=\"like-div\">\n            <button\n              className={like ? \"like-button-true\" : \"like-button-false\"}\n              type=\"button\"\n              onClick={handleClick}\n            >\n              {\" \"}\n              <AiOutlineHeart />\n              &nbsp;\n              <span>me</span>\n            </button>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n"],"sourceRoot":""}